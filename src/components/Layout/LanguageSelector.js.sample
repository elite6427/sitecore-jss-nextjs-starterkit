import { getCurrentLanguage, changeLanguage } from '../../lib/i18n/i18n-manager';
import getConfig from '../../temp/config';
import { useRouter } from '../../lib/routing/useRouter';

// IMPORTANT: this is a _very_ basic example of how a language selector _might_ be
// implemented in your app. The basic premise is that on language selection, you
// change the language and then load a new route with the language parameter, which
// will load new layout data based on the language.

export function LanguageSelector() {
  const { appLanguages } = getConfig();
  const currentLanguage = getCurrentLanguage();
  const router = useRouter();

  return (
    <div>
      {appLanguages.map((language, index) => {
        const style = {
          backgroundColor: language === currentLanguage ? 'lightblue' : 'auto',
        };
        return (
          <button
            onClick={() =>
              changeLanguage(language).then(() => {
                router.pushRoute(`/${language}`);
              })
            }
            style={style}
            key={index}
          >
            {language}
          </button>
        );
      })}
      <button></button>
    </div>
  );
}
